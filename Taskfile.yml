version: '3'

interval: 500ms

silent: true

tasks:
  check-go:
    cmds:
      - command -v go > /dev/null 2> /dev/null || (echo "Go is not installed"; exit 1)

  check-lint:
    cmds:
      - command -v golangci-lint > /dev/null 2> /dev/null || ( echo ">> Installing golangci-lint" && go install github.com/golangci/golangci-lint/cmd/golangci-lint@v1.57.2 )

  check-all:
    deps: [check-go, check-air, check-lint]

  go-fmt:
    deps: [check-go]
    cmds:
      - go fmt ./...

  go-vet:
    deps: [check-go]
    cmds:
      - go vet ./...

  go-lint:
    deps: [check-lint, go-fmt, go-vet]
    cmds:
      - golangci-lint run ./...

  build-server:
    deps: [check-go]
    cmds:
      - go build -o out/server -v cmd/server/main.go

  build-client:
    deps: [check-go]
    cmds:
      - go build -o out/client -v cmd/client/main.go

  build-bbtea:
    deps: [check-go]
    cmds:
      - go build -o out/bbtea -v cmd/bbtea/main.go

  run-server:
    deps: [build-server]
    cmds:
      - ./out/server --dev
    watch: true
    sources:
      - 'internal/**/*.go'
      - 'cmd/server/main.go'
      - exclude: 'internal/client/**/*.go'

  run-client:
    deps: [build-client]
    cmds:
      - ./out/client --dev
    watch: true
    sources:
      - 'internal/**/*.go'
      - 'cmd/client/main.go'
      - exclude: 'internal/server/**/*.go'

  run-bbtea:
    deps: [build-bbtea]
    cmds:
      - ./out/bbtea --dev

  clean-out:
    cmds:
      - rm -f out/*

  clean-all:
    deps: [clean-out]

  dc-dev:
    cmds:
      - docker compose up --watch {{.CLI_ARGS}}

  dc-stop:
    cmds:
      - docker compose stop
